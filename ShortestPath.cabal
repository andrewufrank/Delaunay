cabal-version: 1.12

-- This file has been generated from package.yaml by hpack version 0.35.0.
--
-- see: https://github.com/sol/hpack

name:           ShortestPath
version:        0.2.3
description:    version 0.2.3 try hgeometry
                version 0.2.2 try m ruegenberg graphics.triangulation.delaunay version 0.2.1 - try a shortest path in the main copied from https://stackoverflow.com/questions/14012603/how-to-implement-dijkstra-algorithm-in-haskell seems to allow functions and code is simpler than my old dijkstra code naive, incomplete
license:        BSD2
license-file:   LICENSE
build-type:     Simple

library
  exposed-modules:
      Lib.TryDelaunay
  other-modules:
      Paths_ShortestPath
  hs-source-dirs:
      Code
  ghc-options: -Wall
  build-depends:
      array >=0.5
    , base ==4.*
    , hgeometry
    , hgeometry-combinatorial
    , lens
    , linear
    , semigroups
    , uniformBase
    , vector-circular
  default-language: Haskell2010

executable foo
  main-is: Main.hs
  other-modules:
      Paths_ShortestPath
  hs-source-dirs:
      src
  ghc-options: -Wall
  build-depends:
      ShortestPath
    , array >=0.5
    , base ==4.*
    , hgeometry
    , hgeometry-combinatorial
    , lens
    , linear
    , semigroups
    , uniformBase
    , vector-circular
  default-language: Haskell2010
